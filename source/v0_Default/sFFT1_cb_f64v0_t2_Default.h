/* sfft_cb_f64v0_t2_Default.h
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 09/12/2010
 * Last Modified    : 09/12/2010
 * 
 * 
 * 
 *      cb      =   Complex Bit-reversed Transform
 *      f64v0   =   64-bit floating point (vectorize by 1)
 *      t2      =   2-point transform
 * 
 */

#pragma once
#ifndef _sfft_cb_f64v0_t2_Default_H
#define _sfft_cb_f64v0_t2_Default_H
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
#define sfft_cb_f64v0_t2_Default(T){   \
    register f_vector _r0,_r1,_r2,_r3,_r4,_r5;  \
    \
    _r0 = ((const f_vector*)(T))[0];    \
    _r1 = ((const f_vector*)(T))[1];    \
    _r2 = ((const f_vector*)(T))[2];    \
    _r3 = ((const f_vector*)(T))[3];    \
    \
    _r4 = _r0 + _r2;    \
    _r5 = _r1 + _r3;    \
    \
    _r0 -= _r2; \
    _r1 -= _r3; \
    \
    ((f_vector*)(T))[0] = _r4;  \
    ((f_vector*)(T))[1] = _r5;  \
    ((f_vector*)(T))[2] = _r0;  \
    ((f_vector*)(T))[3] = _r1;  \
}
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
#endif
